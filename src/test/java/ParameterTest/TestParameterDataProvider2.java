package ParameterTest;import org.testng.annotations.DataProvider;import org.testng.annotations.Test;import java.io.IOException;import java.io.InputStream;import java.util.HashMap;import java.util.Map;import java.util.Properties;/** * @program: testNgDemo2 * @description: @DataProvider支持传递一个对象参数 * @author: gonghuihui * @create: 2018-07-26 14:08 **/public class TestParameterDataProvider2 {    @Test(dataProvider = "dbconfig")    public void testConnection(Map<String, String> map) {        for (Map.Entry<String, String> entry : map.entrySet()) {            System.out.println("[Key] : " + entry.getKey() + " [Value] : " + entry.getValue());        }    }    @DataProvider(name = "dbconfig")    public Object[][] provideDbConfig() {        Map<String, String> map = readDbConfig();        return new Object[][] { { map } };    }    public Map<String, String> readDbConfig() {        Properties prop = new Properties();        InputStream input = null;        Map<String, String> map = new HashMap<String, String>();        try {//            文件路径不对，没有找到原因            input = getClass().getClassLoader().getResourceAsStream('/' + "src/db.properties");            prop.load(input);            map.put("jdbc.driver", prop.getProperty("jdbc.driver"));            map.put("jdbc.url", prop.getProperty("jdbc.url"));            map.put("jdbc.username", prop.getProperty("jdbc.username"));            map.put("jdbc.password", prop.getProperty("jdbc.password"));        } catch (Exception e) {            e.printStackTrace();        } finally {            if (input != null) {                try {                    input.close();                } catch (IOException e) {                    e.printStackTrace();                }            }        }        return map;    }}